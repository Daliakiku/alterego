---
interface Props {
	title?: string;
}

const { title = "My Portfolio" } = Astro.props;

// Get the current path
const currentPath = Astro.url.pathname;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<link rel="preconnect" href="https://fonts.googleapis.com">
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
		<link href="https://fonts.googleapis.com/css2?family=Glacial+Indifference&family=Ibarra+Real+Nova:wght@400;500;600;700&family=Roboto+Mono:wght@400;500;600;700&display=swap" rel="stylesheet">
	</head>
	<body>
		<div id="main-content" class="main-content">
			<header class="animate-header">
				<nav>
					<a href="/" class="logo animate-logo">KIKU</a>
					<ul class="animate-nav nav-links">
						<li><a href="/" class={currentPath === '/' ? 'active' : ''}>Home</a></li>
						<li><a href="/photography" class={currentPath.startsWith('/photography') ? 'active' : ''}>Photography</a></li>
						<li><a href="/illustrations" class={currentPath.startsWith('/illustrations') ? 'active' : ''}>Illustrations</a></li>
						<li><a href="/about" class={currentPath === '/about' ? 'active' : ''}>About</a></li>
					</ul>
				</nav>
			</header>

			<main class="animate-main">
				<slot />
			</main>

			<footer class="animate-footer">
				<div class="footer-content">
					<div class="social-links">
						<a href="https://github.com/Daliakiku" target="_blank" rel="noopener">GitHub</a>
						<a href="https://instagram.com/uh_uhm_" target="_blank" rel="noopener">Instagram</a>
						<a href="mailto:dalia.thornburgh@gmail.com">Email</a>
					</div>
				</div>
			</footer>
		</div>
	</body>
</html>

<style is:global>
	:root {
		--primary-color: #292528;
		--text-color: #292528;
		--background-color: #ffffff;
		--secondary-background: #ffffff;
		--grunge-border: #e5e7eb;
	}

	* {
		margin: 0;
		padding: 0;
		box-sizing: border-box;
	}

	html {
		font-family: 'Glacial Indifference', sans-serif;
		color: var(--text-color);
		background-color: var(--background-color);
	}

	body {
		min-height: 100vh;
		display: flex;
		flex-direction: column;
	}

	main {
		position: relative;
		background-color: var(--background-color);
		padding: 2rem;
	}

	section {
		position: relative;
		margin: 2rem 0;
		padding: 2rem;
		background: var(--background-color);
	}

	section::before {
		display: none;
	}

	.button {
		position: relative;
		background: transparent;
		border: 2px solid var(--primary-color);
		color: var(--primary-color);
		padding: 0.75rem 1.5rem;
		font-family: 'Glacial Indifference', sans-serif;
		text-transform: uppercase;
		letter-spacing: 2px;
		transition: all 0.3s ease;
		overflow: hidden;
	}

	.button:hover {
		background: var(--background-color);
		color: var(--primary-color);
		transform: translateY(-2px);
	}

	header {
		background-color: var(--background-color);
		position: sticky;
		top: 0;
		z-index: 100;
	}

	nav {
		max-width: 1200px;
		margin: 0 auto;
		padding: 1rem 2rem;
		display: flex;
		justify-content: space-between;
		align-items: center;
	}

	nav ul {
		display: flex;
		gap: 2rem;
		list-style: none;
	}

	.logo {
		font-size: 1.5rem;
		font-weight: 700;
		color: var(--primary-color);
	}

	nav a {
		text-decoration: none;
		color: var(--text-color);
		font-weight: 500;
		transition: color 0.2s;
	}

	nav a.active {
		font-weight: 700;
		color: var(--primary-color);
	}

	nav a:hover {
		color: var(--primary-color);
	}

	footer {
		background-color: var(--background-color);
		padding: 2rem;
		position: fixed;
		bottom: 0;
		width: 100%;
		z-index: 10;
	}

	.footer-content {
		max-width: 1200px;
		margin: 0 auto;
		display: flex;
		justify-content: center;
		align-items: center;
	}

	.social-links {
		display: flex;
		gap: 2rem;
		justify-content: center;
	}

	.social-links a {
		color: var(--text-color);
		text-decoration: none;
		transition: all 0.3s ease;
		position: relative;
		padding: 0.5rem 0;
	}

	.social-links a::after {
		content: '';
		position: absolute;
		width: 0;
		height: 2px;
		bottom: 0;
		left: 0;
		background-color: var(--primary-color);
		transition: width 0.3s ease;
	}

	.social-links a:hover {
		color: var(--primary-color);
		transform: translateY(-2px);
	}

	.social-links a:hover::after {
		width: 100%;
	}

	h1, h2, h3, h4, h5, h6 {
		font-family: 'Ibarra Real Nova', serif;
		text-transform: uppercase;
		letter-spacing: 2px;
		position: relative;
		display: inline-block;
	}

	h2::after, h3::after {
		display: none;
	}

	/* Grunge image effects */
	img {
		filter: contrast(110%);
		transition: all 0.3s ease;
	}

	img:hover {
		transform: scale(1.02);
	}

	/* Grunge list styles */
	ul, ol {
		list-style: none;
		padding-left: 1.5rem;
	}

	ul li::before, ol li::before {
		content: '>';
		color: var(--primary-color);
		margin-right: 0.5rem;
		font-family: 'Roboto Mono', monospace;
	}

	/* Grunge link styles */
	a {
		color: var(--primary-color);
		text-decoration: none;
		position: relative;
		transition: all 0.3s ease;
	}

	a::after {
		display: none;
	}

	@media (max-width: 768px) {
		nav {
			flex-direction: column;
			gap: 1rem;
		}

		header {
			transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
			will-change: transform, opacity;
		}

		header.hidden {
			transform: translateY(-100%);
			opacity: 0;
			pointer-events: none;
		}

		nav ul {
			flex-direction: column;
			align-items: center;
			gap: 1rem;
		}

		.footer-content {
			flex-direction: column;
			gap: 1rem;
			text-align: center;
		}
	}
</style>

<script>
	let lastScrollTop = 0;
	const header = document.querySelector('header');
	const mobileBreakpoint = 768;

	function handleScroll() {
		if (window.innerWidth <= mobileBreakpoint) {
			const currentScroll = window.pageYOffset || document.documentElement.scrollTop;
			const windowHeight = window.innerHeight;
			const documentHeight = document.documentElement.scrollHeight;
			const isNearBottom = windowHeight + currentScroll >= documentHeight - 100;
			
			if (currentScroll > lastScrollTop || isNearBottom) {
				// Scrolling down or near bottom - hide header
				header?.classList.add('hidden');
			} else if (currentScroll < lastScrollTop && !isNearBottom) {
				// Scrolling up and not near bottom - show header
				header?.classList.remove('hidden');
			}
			
			lastScrollTop = currentScroll <= 0 ? 0 : currentScroll;
		} else {
			header?.classList.remove('hidden');
		}
	}

	window.addEventListener('scroll', handleScroll);
	window.addEventListener('resize', handleScroll);
</script>
